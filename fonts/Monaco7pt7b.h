#pragma once
#include <Adafruit_GFX.h>

const uint8_t Monaco7pt7bBitmaps[] PROGMEM = {
  0xFF, 0xA0, 0xB6, 0xD0, 0x12, 0x12, 0x12, 0xFF, 0x24, 0x24, 0x24, 0xFF,
  0x48, 0x48, 0x48, 0x21, 0x1D, 0x5A, 0xD1, 0x86, 0x29, 0x6B, 0x57, 0x10,
  0x80, 0x61, 0x92, 0x92, 0x94, 0x68, 0x08, 0x16, 0x29, 0x29, 0x49, 0x86,
  0x30, 0x48, 0x48, 0x48, 0x50, 0x22, 0x52, 0x8A, 0x84, 0x86, 0x79, 0xE0,
  0x08, 0x88, 0x84, 0x42, 0x10, 0x82, 0x10, 0x41, 0x04, 0x82, 0x08, 0x21,
  0x04, 0x21, 0x08, 0x84, 0x44, 0x40, 0x25, 0x5C, 0xEA, 0x90, 0x10, 0x20,
  0x47, 0xF1, 0x02, 0x04, 0x00, 0xF5, 0x80, 0xFE, 0xF0, 0x04, 0x10, 0x82,
  0x10, 0x82, 0x10, 0x42, 0x08, 0x00, 0x38, 0x8A, 0x0C, 0x38, 0xB2, 0x68,
  0xE1, 0x82, 0x88, 0xE0, 0x30, 0xA2, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10,
  0x23, 0xF8, 0x7A, 0x10, 0x41, 0x08, 0x42, 0x10, 0x82, 0x0F, 0xC0, 0xF0,
  0x20, 0x82, 0x11, 0xC0, 0x81, 0x04, 0x2F, 0x00, 0x04, 0x0C, 0x14, 0x24,
  0x24, 0x44, 0x84, 0xFF, 0x04, 0x04, 0x04, 0xFE, 0x08, 0x20, 0xF0, 0x20,
  0x41, 0x04, 0x2F, 0x00, 0x3C, 0x82, 0x04, 0x0B, 0xD8, 0x60, 0xC1, 0x82,
  0x88, 0xE0, 0xFC, 0x10, 0x84, 0x10, 0x82, 0x10, 0x41, 0x04, 0x00, 0x7A,
  0x18, 0x61, 0x48, 0xC4, 0xA1, 0x86, 0x17, 0x80, 0x38, 0x8A, 0x0C, 0x18,
  0x30, 0xDE, 0x81, 0x04, 0x09, 0xE0, 0xF0, 0x0F, 0xF0, 0x0F, 0x58, 0x03,
  0x0C, 0x30, 0xC0, 0x30, 0x0C, 0x03, 0xFC, 0x0F, 0xC0, 0xC0, 0x30, 0x0C,
  0x03, 0x0C, 0x30, 0xC0, 0x72, 0x28, 0x41, 0x08, 0x42, 0x08, 0x20, 0x02,
  0x08, 0x3C, 0x42, 0x81, 0x9D, 0xA5, 0xA5, 0xA5, 0x9E, 0x80, 0x40, 0x3C,
  0x18, 0x18, 0x18, 0x24, 0x24, 0x24, 0x42, 0x42, 0x7E, 0x81, 0x81, 0xFA,
  0x18, 0x61, 0x87, 0xE8, 0x61, 0x86, 0x1F, 0x80, 0x3D, 0x08, 0x20, 0x82,
  0x08, 0x20, 0x81, 0x03, 0xC0, 0xF2, 0x28, 0x61, 0x86, 0x18, 0x61, 0x86,
  0x2F, 0x00, 0xFE, 0x08, 0x20, 0x83, 0xF8, 0x20, 0x82, 0x0F, 0xC0, 0xFE,
  0x08, 0x20, 0x83, 0xF8, 0x20, 0x82, 0x08, 0x00, 0x3D, 0x08, 0x20, 0x82,
  0x08, 0xE1, 0x85, 0x13, 0xC0, 0x86, 0x18, 0x61, 0x87, 0xF8, 0x61, 0x86,
  0x18, 0x40, 0xF9, 0x08, 0x42, 0x10, 0x84, 0x21, 0x3E, 0x38, 0x42, 0x10,
  0x84, 0x21, 0x0C, 0x7C, 0x85, 0x12, 0x44, 0x8A, 0x18, 0x28, 0x48, 0x89,
  0x0A, 0x08, 0x84, 0x21, 0x08, 0x42, 0x10, 0x84, 0x3E, 0x83, 0x8F, 0x1E,
  0x3A, 0xB5, 0x6A, 0xC9, 0x93, 0x06, 0x08, 0x87, 0x1C, 0x69, 0xA6, 0x99,
  0x65, 0x8E, 0x38, 0x40, 0x31, 0x28, 0x61, 0x86, 0x18, 0x61, 0x85, 0x23,
  0x00, 0xFA, 0x18, 0x61, 0x86, 0x2F, 0x20, 0x82, 0x08, 0x00, 0x30, 0x92,
  0x14, 0x28, 0x50, 0xA1, 0x42, 0x84, 0x90, 0xC0, 0x81, 0x01, 0xC0, 0xF4,
  0x63, 0x19, 0x72, 0x92, 0x94, 0x62, 0x7A, 0x08, 0x20, 0x40, 0xC0, 0x81,
  0x04, 0x1F, 0x80, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20,
  0x40, 0x86, 0x18, 0x61, 0x86, 0x18, 0x61, 0x86, 0x17, 0x80, 0x83, 0x06,
  0x0A, 0x24, 0x48, 0x8A, 0x14, 0x28, 0x20, 0x40, 0x93, 0x26, 0x4D, 0x5A,
  0xB5, 0x5B, 0x22, 0x44, 0x89, 0x10, 0x85, 0x24, 0x8C, 0x30, 0xC3, 0x12,
  0x4A, 0x18, 0x40, 0x83, 0x05, 0x11, 0x42, 0x82, 0x04, 0x08, 0x10, 0x20,
  0x40, 0xFC, 0x10, 0x82, 0x10, 0x42, 0x10, 0x42, 0x0F, 0xC0, 0xF8, 0x88,
  0x88, 0x88, 0x88, 0x88, 0x8F, 0x81, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04,
  0x08, 0x08, 0x08, 0xF1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x10, 0x20,
  0xA1, 0x44, 0x48, 0xA0, 0x80, 0xFE, 0x90, 0x3D, 0x18, 0x61, 0x86, 0x18,
  0xDD, 0x82, 0x08, 0x2E, 0xC6, 0x18, 0x61, 0x86, 0x2F, 0x00, 0x3D, 0x08,
  0x20, 0x82, 0x04, 0x0F, 0x04, 0x10, 0x4F, 0x46, 0x18, 0x61, 0x86, 0x37,
  0x40, 0x39, 0x18, 0x7F, 0x82, 0x04, 0x0F, 0x1E, 0x40, 0x81, 0x0F, 0xC4,
  0x08, 0x10, 0x20, 0x40, 0x80, 0x3D, 0x18, 0x61, 0x86, 0x18, 0xDD, 0x06,
  0x27, 0x00, 0x82, 0x08, 0x2E, 0xC6, 0x18, 0x61, 0x86, 0x18, 0x40, 0x20,
  0x01, 0xC2, 0x10, 0x84, 0x21, 0x0E, 0x08, 0x00, 0xF0, 0x84, 0x21, 0x08,
  0x42, 0x11, 0x70, 0x84, 0x21, 0x19, 0x53, 0x18, 0xA4, 0xA2, 0xE1, 0x08,
  0x42, 0x10, 0x84, 0x21, 0x0E, 0xB7, 0xB6, 0x4C, 0x99, 0x32, 0x64, 0xC9,
  0xBB, 0x18, 0x61, 0x86, 0x18, 0x61, 0x31, 0x28, 0x61, 0x86, 0x14, 0x8C,
  0xBB, 0x18, 0x61, 0x86, 0x18, 0xBC, 0x82, 0x08, 0x00, 0x3D, 0x18, 0x61,
  0x86, 0x18, 0xDD, 0x04, 0x10, 0x40, 0xBE, 0x63, 0x08, 0x42, 0x10, 0x7A,
  0x18, 0x18, 0x18, 0x18, 0x5E, 0x20, 0x82, 0x3F, 0x20, 0x82, 0x08, 0x20,
  0x70, 0x86, 0x18, 0x61, 0x86, 0x18, 0xDD, 0x83, 0x05, 0x12, 0x24, 0x45,
  0x0A, 0x08, 0x93, 0x26, 0xAD, 0x5A, 0xB5, 0x51, 0x22, 0x8A, 0x94, 0x42,
  0x2A, 0x31, 0x42, 0x84, 0x89, 0x21, 0x43, 0x02, 0x04, 0x10, 0x23, 0x80,
  0xFC, 0x10, 0x84, 0x21, 0x08, 0x3F, 0x1C, 0x82, 0x08, 0x20, 0x8C, 0x08,
  0x20, 0x82, 0x08, 0x20, 0x70, 0xFF, 0xE0, 0xE0, 0x41, 0x04, 0x10, 0x40,
  0xC4, 0x10, 0x41, 0x04, 0x13, 0x80, 0x66, 0xD9, 0x80 };

const GFXglyph Monaco7pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   8,    0,    1 },   // 0x20 ' '
  {     0,   1,  11,   8,    3,  -10 },   // 0x21 '!'
  {     2,   3,   4,   8,    3,  -10 },   // 0x22 '"'
  {     4,   8,  11,   8,    0,  -10 },   // 0x23 '#'
  {    15,   5,  15,   8,    1,  -12 },   // 0x24 '$'
  {    25,   8,  11,   8,    0,  -10 },   // 0x25 '%'
  {    36,   8,  11,   8,    0,  -10 },   // 0x26 '&'
  {    47,   1,   3,   8,    4,  -10 },   // 0x27 '''
  {    48,   5,  14,   8,    1,  -11 },   // 0x28 '('
  {    57,   5,  14,   8,    2,  -11 },   // 0x29 ')'
  {    66,   5,   6,   8,    1,  -10 },   // 0x2A '*'
  {    70,   7,   7,   8,    0,   -8 },   // 0x2B '+'
  {    77,   2,   5,   8,    4,   -1 },   // 0x2C ','
  {    79,   7,   1,   8,    1,   -5 },   // 0x2D '-'
  {    80,   2,   2,   8,    3,   -1 },   // 0x2E '.'
  {    81,   6,  11,   8,    1,  -10 },   // 0x2F '/'
  {    90,   7,  11,   8,    0,  -10 },   // 0x30 '0'
  {   100,   7,  11,   8,    1,  -10 },   // 0x31 '1'
  {   110,   6,  11,   8,    1,  -10 },   // 0x32 '2'
  {   119,   6,  11,   8,    1,  -10 },   // 0x33 '3'
  {   128,   8,  11,   8,    0,  -10 },   // 0x34 '4'
  {   139,   6,  11,   8,    1,  -10 },   // 0x35 '5'
  {   148,   7,  11,   8,    0,  -10 },   // 0x36 '6'
  {   158,   6,  11,   8,    1,  -10 },   // 0x37 '7'
  {   167,   6,  11,   8,    1,  -10 },   // 0x38 '8'
  {   176,   7,  11,   8,    0,  -10 },   // 0x39 '9'
  {   186,   2,   8,   8,    3,   -7 },   // 0x3A ':'
  {   188,   2,  11,   8,    3,   -7 },   // 0x3B ';'
  {   191,   8,   7,   8,    0,   -8 },   // 0x3C '<'
  {   198,   6,   3,   8,    1,   -6 },   // 0x3D '='
  {   201,   8,   7,   8,    0,   -8 },   // 0x3E '>'
  {   208,   6,  12,   8,    1,  -10 },   // 0x3F '?'
  {   217,   8,  11,   8,    0,  -10 },   // 0x40 '@'
  {   228,   8,  11,   8,    0,  -10 },   // 0x41 'A'
  {   239,   6,  11,   8,    1,  -10 },   // 0x42 'B'
  {   248,   6,  11,   8,    1,  -10 },   // 0x43 'C'
  {   257,   6,  11,   8,    1,  -10 },   // 0x44 'D'
  {   266,   6,  11,   8,    1,  -10 },   // 0x45 'E'
  {   275,   6,  11,   8,    1,  -10 },   // 0x46 'F'
  {   284,   6,  11,   8,    1,  -10 },   // 0x47 'G'
  {   293,   6,  11,   8,    1,  -10 },   // 0x48 'H'
  {   302,   5,  11,   8,    1,  -10 },   // 0x49 'I'
  {   309,   5,  11,   8,    1,  -10 },   // 0x4A 'J'
  {   316,   7,  11,   8,    1,  -10 },   // 0x4B 'K'
  {   326,   5,  11,   8,    2,  -10 },   // 0x4C 'L'
  {   333,   7,  11,   8,    1,  -10 },   // 0x4D 'M'
  {   343,   6,  11,   8,    1,  -10 },   // 0x4E 'N'
  {   352,   6,  11,   8,    1,  -10 },   // 0x4F 'O'
  {   361,   6,  11,   8,    1,  -10 },   // 0x50 'P'
  {   370,   7,  14,   8,    1,  -10 },   // 0x51 'Q'
  {   383,   5,  11,   8,    1,  -10 },   // 0x52 'R'
  {   390,   6,  11,   8,    1,  -10 },   // 0x53 'S'
  {   399,   7,  11,   8,    0,  -10 },   // 0x54 'T'
  {   409,   6,  11,   8,    1,  -10 },   // 0x55 'U'
  {   418,   7,  11,   8,    1,  -10 },   // 0x56 'V'
  {   428,   7,  11,   8,    0,  -10 },   // 0x57 'W'
  {   438,   6,  11,   8,    1,  -10 },   // 0x58 'X'
  {   447,   7,  11,   8,    1,  -10 },   // 0x59 'Y'
  {   457,   6,  11,   8,    1,  -10 },   // 0x5A 'Z'
  {   466,   4,  14,   8,    2,  -11 },   // 0x5B '['
  {   473,   7,  11,   8,    1,  -10 },   // 0x5C '\'
  {   483,   4,  14,   8,    2,  -11 },   // 0x5D ']'
  {   490,   7,   7,   8,    0,  -10 },   // 0x5E '^'
  {   497,   7,   1,   8,    0,    1 },   // 0x5F '_'
  {   498,   2,   2,   8,    2,  -10 },   // 0x60 '`'
  {   499,   6,   8,   8,    1,   -7 },   // 0x61 'a'
  {   505,   6,  11,   8,    1,  -10 },   // 0x62 'b'
  {   514,   6,   8,   8,    1,   -7 },   // 0x63 'c'
  {   520,   6,  11,   8,    1,  -10 },   // 0x64 'd'
  {   529,   6,   8,   8,    1,   -7 },   // 0x65 'e'
  {   535,   7,  11,   8,    1,  -10 },   // 0x66 'f'
  {   545,   6,  11,   8,    1,   -7 },   // 0x67 'g'
  {   554,   6,  11,   8,    1,  -10 },   // 0x68 'h'
  {   563,   5,  11,   8,    1,  -10 },   // 0x69 'i'
  {   570,   5,  14,   8,    1,  -10 },   // 0x6A 'j'
  {   579,   5,  11,   8,    1,  -10 },   // 0x6B 'k'
  {   586,   5,  11,   8,    1,  -10 },   // 0x6C 'l'
  {   593,   7,   8,   8,    0,   -7 },   // 0x6D 'm'
  {   600,   6,   8,   8,    1,   -7 },   // 0x6E 'n'
  {   606,   6,   8,   8,    1,   -7 },   // 0x6F 'o'
  {   612,   6,  11,   8,    1,   -7 },   // 0x70 'p'
  {   621,   6,  11,   8,    1,   -7 },   // 0x71 'q'
  {   630,   5,   8,   8,    2,   -7 },   // 0x72 'r'
  {   635,   6,   8,   8,    1,   -7 },   // 0x73 's'
  {   641,   6,  10,   8,    1,   -9 },   // 0x74 't'
  {   649,   6,   8,   8,    1,   -7 },   // 0x75 'u'
  {   655,   7,   8,   8,    1,   -7 },   // 0x76 'v'
  {   662,   7,   8,   8,    0,   -7 },   // 0x77 'w'
  {   669,   5,   8,   8,    1,   -7 },   // 0x78 'x'
  {   674,   7,  11,   8,    0,   -7 },   // 0x79 'y'
  {   684,   6,   8,   8,    1,   -7 },   // 0x7A 'z'
  {   690,   6,  14,   8,    2,  -11 },   // 0x7B '{'
  {   701,   1,  11,   8,    3,  -10 },   // 0x7C '|'
  {   703,   6,  14,   8,    1,  -11 },   // 0x7D '}'
  {   714,   6,   3,   8,    1,   -5 } }; // 0x7E '~'

const GFXfont Monaco7pt7b PROGMEM = {
  (uint8_t  *)Monaco7pt7bBitmaps,
  (GFXglyph *)Monaco7pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1389 bytes
