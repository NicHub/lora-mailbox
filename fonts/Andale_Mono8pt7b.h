#pragma once
#include <Adafruit_GFX.h>

const uint8_t Andale_Mono8pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0x60, 0x99, 0x99, 0x12, 0x12, 0x12, 0xFF, 0x24, 0x24, 0x24,
  0xFF, 0x24, 0x48, 0x48, 0x10, 0xE5, 0x64, 0x91, 0x43, 0x85, 0x14, 0x59,
  0x9C, 0x10, 0x60, 0xA4, 0x49, 0x12, 0x48, 0x64, 0x01, 0x00, 0x98, 0x49,
  0x12, 0x48, 0x94, 0x18, 0x38, 0x22, 0x11, 0x09, 0x03, 0x01, 0x85, 0x25,
  0x14, 0x84, 0x23, 0x0E, 0x60, 0xF0, 0x12, 0x44, 0x88, 0x88, 0x88, 0x44,
  0x21, 0x84, 0x22, 0x11, 0x11, 0x11, 0x22, 0x48, 0x25, 0x5C, 0xEA, 0x90,
  0x10, 0x20, 0x47, 0xF1, 0x02, 0x04, 0x00, 0x56, 0xF8, 0xC0, 0x08, 0x44,
  0x22, 0x10, 0x88, 0x44, 0x20, 0x38, 0x8A, 0x0C, 0x19, 0x32, 0x60, 0xC1,
  0x82, 0x88, 0xE0, 0x23, 0x28, 0x42, 0x10, 0x84, 0x21, 0x3E, 0x72, 0x20,
  0x41, 0x04, 0x20, 0x84, 0x21, 0x0F, 0xC0, 0x72, 0x20, 0x41, 0x08, 0xC0,
  0x81, 0x06, 0x27, 0x00, 0x04, 0x18, 0x51, 0x22, 0x48, 0xA1, 0x7F, 0x04,
  0x08, 0x10, 0x7C, 0x81, 0x02, 0x07, 0x80, 0x80, 0x81, 0x03, 0x09, 0xE0,
  0x38, 0x8A, 0x04, 0x0B, 0x98, 0xA0, 0xC1, 0x82, 0x88, 0xE0, 0xFE, 0x04,
  0x10, 0x20, 0x81, 0x04, 0x08, 0x20, 0x41, 0x00, 0x38, 0x89, 0x12, 0x22,
  0x87, 0x11, 0x41, 0x82, 0x88, 0xE0, 0x38, 0x8A, 0x0C, 0x18, 0x28, 0x4F,
  0x81, 0x02, 0x88, 0xE0, 0xC3, 0x50, 0x05, 0x60, 0x04, 0x66, 0x20, 0x60,
  0x60, 0x40, 0xFF, 0x00, 0x00, 0xFF, 0x81, 0x81, 0x81, 0x19, 0x88, 0x00,
  0x74, 0x42, 0x11, 0x11, 0x08, 0x02, 0x10, 0x1C, 0x62, 0x41, 0x9D, 0xA5,
  0xA9, 0xA9, 0xAA, 0x9C, 0x40, 0x60, 0x1E, 0x08, 0x0A, 0x05, 0x02, 0x82,
  0x21, 0x10, 0xF8, 0x82, 0x41, 0x20, 0xA0, 0x20, 0xF9, 0x0A, 0x0C, 0x18,
  0x5F, 0x21, 0x41, 0x83, 0x0B, 0xE0, 0x3C, 0x86, 0x04, 0x08, 0x10, 0x20,
  0x40, 0x80, 0x84, 0xF0, 0xF1, 0x1A, 0x14, 0x18, 0x30, 0x60, 0xC1, 0x85,
  0x1B, 0xC0, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xE0, 0x40, 0x81, 0x03, 0xF8,
  0xFF, 0x02, 0x04, 0x08, 0x1F, 0xE0, 0x40, 0x81, 0x02, 0x00, 0x3C, 0x86,
  0x04, 0x08, 0x10, 0x23, 0xC1, 0x82, 0x84, 0xF0, 0x83, 0x06, 0x0C, 0x18,
  0x3F, 0xE0, 0xC1, 0x83, 0x06, 0x08, 0xF9, 0x08, 0x42, 0x10, 0x84, 0x21,
  0x3E, 0x08, 0x42, 0x10, 0x84, 0x21, 0x08, 0x7C, 0x81, 0x41, 0x21, 0x11,
  0x09, 0x05, 0x03, 0x41, 0x10, 0x84, 0x41, 0x20, 0x40, 0x81, 0x02, 0x04,
  0x08, 0x10, 0x20, 0x40, 0x81, 0x03, 0xF8, 0x83, 0x8F, 0x1D, 0x5A, 0xB2,
  0x60, 0xC1, 0x83, 0x06, 0x08, 0x83, 0x87, 0x0D, 0x1A, 0x32, 0x62, 0xC5,
  0x87, 0x0E, 0x08, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82, 0x88,
  0xE0, 0xF9, 0x0A, 0x0C, 0x18, 0x5F, 0x20, 0x40, 0x81, 0x02, 0x00, 0x38,
  0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82, 0x88, 0xE0, 0x40, 0x60, 0xF9,
  0x0A, 0x0C, 0x18, 0x5F, 0x24, 0x44, 0x85, 0x0A, 0x08, 0x39, 0x18, 0x20,
  0x60, 0x60, 0x41, 0x06, 0x27, 0x00, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04,
  0x08, 0x10, 0x20, 0x40, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82,
  0x88, 0xE0, 0x80, 0xA0, 0x90, 0x48, 0x22, 0x21, 0x10, 0x88, 0x28, 0x14,
  0x0A, 0x02, 0x00, 0x80, 0xC0, 0x60, 0x28, 0x24, 0x92, 0x49, 0x54, 0xAA,
  0x55, 0x11, 0x08, 0x80, 0x80, 0xA0, 0x88, 0x82, 0x81, 0x40, 0x40, 0x50,
  0x28, 0x22, 0x20, 0xA0, 0x20, 0x80, 0xA0, 0x90, 0x44, 0x41, 0x40, 0xA0,
  0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0xFE, 0x04, 0x10, 0x40, 0x82, 0x08,
  0x10, 0x41, 0x03, 0xF8, 0xF2, 0x49, 0x24, 0x92, 0x4E, 0x84, 0x10, 0x82,
  0x10, 0x82, 0x10, 0x42, 0xE4, 0x92, 0x49, 0x24, 0x9E, 0x10, 0x50, 0xA2,
  0x24, 0x50, 0x40, 0xFF, 0xC0, 0x44, 0x7D, 0x04, 0x09, 0xF4, 0x30, 0x61,
  0xBD, 0x81, 0x02, 0x05, 0xCC, 0x50, 0x60, 0xC1, 0x83, 0x8A, 0xE0, 0x3E,
  0x82, 0x04, 0x08, 0x10, 0x10, 0x1F, 0x02, 0x04, 0x09, 0xD4, 0x70, 0x60,
  0xC1, 0x82, 0x8C, 0xE8, 0x38, 0x8A, 0x0F, 0xF8, 0x10, 0x10, 0x1F, 0x1C,
  0x82, 0x3F, 0x20, 0x82, 0x08, 0x20, 0x82, 0x00, 0x7F, 0x0A, 0x14, 0x27,
  0x90, 0x3F, 0x21, 0x83, 0x09, 0xE0, 0x81, 0x02, 0x05, 0xEC, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x08, 0x20, 0x72, 0x49, 0x24, 0x80, 0x10, 0x07, 0x11,
  0x11, 0x11, 0x11, 0x96, 0x81, 0x02, 0x04, 0x28, 0x92, 0x28, 0x70, 0x91,
  0x12, 0x10, 0xE1, 0x08, 0x42, 0x10, 0x84, 0x21, 0x0E, 0xBB, 0x66, 0x62,
  0x31, 0x18, 0x8C, 0x46, 0x23, 0x11, 0xBD, 0x86, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x51, 0x1C, 0xB9, 0x8A, 0x0C, 0x18,
  0x30, 0x71, 0x5C, 0x81, 0x02, 0x00, 0x3A, 0x8E, 0x0C, 0x18, 0x30, 0x51,
  0x9D, 0x02, 0x04, 0x08, 0xBB, 0x18, 0x20, 0x82, 0x08, 0x20, 0x7D, 0x06,
  0x03, 0x80, 0xC0, 0x60, 0xBE, 0x20, 0x43, 0xF1, 0x02, 0x04, 0x08, 0x10,
  0x20, 0x3C, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x61, 0xBD, 0x80, 0xA0, 0x90,
  0x44, 0x42, 0x20, 0xA0, 0x50, 0x10, 0x83, 0x06, 0x4D, 0x5A, 0xB5, 0x51,
  0x22, 0x82, 0x88, 0xA0, 0x81, 0x05, 0x11, 0x41, 0x80, 0xA0, 0x90, 0x44,
  0x42, 0x20, 0xA0, 0x30, 0x10, 0x08, 0x08, 0x38, 0x00, 0xFE, 0x08, 0x20,
  0x81, 0x04, 0x10, 0x7F, 0x19, 0x08, 0x42, 0x32, 0x08, 0x21, 0x08, 0x42,
  0x0C, 0xFF, 0xFC, 0xC1, 0x08, 0x42, 0x08, 0x22, 0x21, 0x08, 0x42, 0x60,
  0x78, 0xC3, 0x80 };

const GFXglyph Andale_Mono8pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  10,    0,    0 },   // 0x20 ' '
  {     1,   1,  11,  10,    4,  -10 },   // 0x21 '!'
  {     3,   4,   4,  10,    3,  -10 },   // 0x22 '"'
  {     5,   8,  11,  10,    1,  -10 },   // 0x23 '#'
  {    16,   6,  13,  10,    2,  -11 },   // 0x24 '$'
  {    26,  10,  11,  10,    0,  -10 },   // 0x25 '%'
  {    40,   9,  11,  10,    1,  -10 },   // 0x26 '&'
  {    53,   1,   4,  10,    4,  -10 },   // 0x27 '''
  {    54,   4,  14,  10,    3,  -10 },   // 0x28 '('
  {    61,   4,  14,  10,    3,  -10 },   // 0x29 ')'
  {    68,   5,   6,  10,    2,  -10 },   // 0x2A '*'
  {    72,   7,   7,  10,    1,   -8 },   // 0x2B '+'
  {    79,   2,   4,  10,    3,   -1 },   // 0x2C ','
  {    80,   5,   1,  10,    2,   -4 },   // 0x2D '-'
  {    81,   1,   2,  10,    4,   -1 },   // 0x2E '.'
  {    82,   5,  11,  10,    2,  -10 },   // 0x2F '/'
  {    89,   7,  11,  10,    1,  -10 },   // 0x30 '0'
  {    99,   5,  11,  10,    2,  -10 },   // 0x31 '1'
  {   106,   6,  11,  10,    2,  -10 },   // 0x32 '2'
  {   115,   6,  11,  10,    2,  -10 },   // 0x33 '3'
  {   124,   7,  11,  10,    1,  -10 },   // 0x34 '4'
  {   134,   7,  11,  10,    1,  -10 },   // 0x35 '5'
  {   144,   7,  11,  10,    1,  -10 },   // 0x36 '6'
  {   154,   7,  11,  10,    1,  -10 },   // 0x37 '7'
  {   164,   7,  11,  10,    1,  -10 },   // 0x38 '8'
  {   174,   7,  11,  10,    1,  -10 },   // 0x39 '9'
  {   184,   1,   8,  10,    4,   -7 },   // 0x3A ':'
  {   185,   2,  10,  10,    3,   -7 },   // 0x3B ';'
  {   188,   6,   7,  10,    2,   -8 },   // 0x3C '<'
  {   194,   8,   4,  10,    1,   -7 },   // 0x3D '='
  {   198,   6,   7,  10,    2,   -8 },   // 0x3E '>'
  {   204,   5,  11,  10,    2,  -10 },   // 0x3F '?'
  {   211,   8,  12,  10,    1,  -10 },   // 0x40 '@'
  {   223,   9,  11,  10,    0,  -10 },   // 0x41 'A'
  {   236,   7,  11,  10,    1,  -10 },   // 0x42 'B'
  {   246,   7,  11,  10,    1,  -10 },   // 0x43 'C'
  {   256,   7,  11,  10,    1,  -10 },   // 0x44 'D'
  {   266,   7,  11,  10,    1,  -10 },   // 0x45 'E'
  {   276,   7,  11,  10,    1,  -10 },   // 0x46 'F'
  {   286,   7,  11,  10,    1,  -10 },   // 0x47 'G'
  {   296,   7,  11,  10,    1,  -10 },   // 0x48 'H'
  {   306,   5,  11,  10,    2,  -10 },   // 0x49 'I'
  {   313,   5,  11,  10,    1,  -10 },   // 0x4A 'J'
  {   320,   9,  11,  10,    1,  -10 },   // 0x4B 'K'
  {   333,   7,  11,  10,    1,  -10 },   // 0x4C 'L'
  {   343,   7,  11,  10,    1,  -10 },   // 0x4D 'M'
  {   353,   7,  11,  10,    1,  -10 },   // 0x4E 'N'
  {   363,   7,  11,  10,    1,  -10 },   // 0x4F 'O'
  {   373,   7,  11,  10,    1,  -10 },   // 0x50 'P'
  {   383,   7,  13,  10,    1,  -10 },   // 0x51 'Q'
  {   395,   7,  11,  10,    1,  -10 },   // 0x52 'R'
  {   405,   6,  11,  10,    2,  -10 },   // 0x53 'S'
  {   414,   7,  11,  10,    1,  -10 },   // 0x54 'T'
  {   424,   7,  11,  10,    1,  -10 },   // 0x55 'U'
  {   434,   9,  11,  10,    0,  -10 },   // 0x56 'V'
  {   447,   9,  11,  10,    0,  -10 },   // 0x57 'W'
  {   460,   9,  11,  10,    0,  -10 },   // 0x58 'X'
  {   473,   9,  11,  10,    0,  -10 },   // 0x59 'Y'
  {   486,   7,  11,  10,    1,  -10 },   // 0x5A 'Z'
  {   496,   3,  13,  10,    4,  -10 },   // 0x5B '['
  {   501,   5,  11,  10,    2,  -10 },   // 0x5C '\'
  {   508,   3,  13,  10,    3,  -10 },   // 0x5D ']'
  {   513,   7,   6,  10,    1,  -11 },   // 0x5E '^'
  {   519,  10,   1,  10,    0,    3 },   // 0x5F '_'
  {   521,   3,   2,  10,    3,  -10 },   // 0x60 '`'
  {   522,   7,   8,  10,    1,   -7 },   // 0x61 'a'
  {   529,   7,  11,  10,    1,  -10 },   // 0x62 'b'
  {   539,   7,   8,  10,    1,   -7 },   // 0x63 'c'
  {   546,   7,  11,  10,    1,  -10 },   // 0x64 'd'
  {   556,   7,   8,  10,    1,   -7 },   // 0x65 'e'
  {   563,   6,  11,  10,    2,  -10 },   // 0x66 'f'
  {   572,   7,  11,  10,    1,   -7 },   // 0x67 'g'
  {   582,   7,  11,  10,    1,  -10 },   // 0x68 'h'
  {   592,   3,  11,  10,    3,  -10 },   // 0x69 'i'
  {   597,   4,  14,  10,    2,  -10 },   // 0x6A 'j'
  {   604,   7,  11,  10,    2,  -10 },   // 0x6B 'k'
  {   614,   5,  11,  10,    2,  -10 },   // 0x6C 'l'
  {   621,   9,   8,  10,    0,   -7 },   // 0x6D 'm'
  {   630,   7,   8,  10,    1,   -7 },   // 0x6E 'n'
  {   637,   7,   8,  10,    1,   -7 },   // 0x6F 'o'
  {   644,   7,  11,  10,    1,   -7 },   // 0x70 'p'
  {   654,   7,  11,  10,    1,   -7 },   // 0x71 'q'
  {   664,   6,   8,  10,    3,   -7 },   // 0x72 'r'
  {   670,   7,   8,  10,    1,   -7 },   // 0x73 's'
  {   677,   7,  10,  10,    2,   -9 },   // 0x74 't'
  {   686,   7,   8,  10,    1,   -7 },   // 0x75 'u'
  {   693,   9,   8,  10,    0,   -7 },   // 0x76 'v'
  {   702,   7,   8,  10,    1,   -7 },   // 0x77 'w'
  {   709,   7,   8,  10,    1,   -7 },   // 0x78 'x'
  {   716,   9,  11,  10,    0,   -7 },   // 0x79 'y'
  {   729,   7,   8,  10,    1,   -7 },   // 0x7A 'z'
  {   736,   5,  14,  10,    3,  -10 },   // 0x7B '{'
  {   745,   1,  14,  10,    4,  -10 },   // 0x7C '|'
  {   747,   5,  14,  10,    2,  -10 },   // 0x7D '}'
  {   756,   9,   2,  10,    0,   -4 } }; // 0x7E '~'

const GFXfont Andale_Mono8pt7b PROGMEM = {
  (uint8_t  *)Andale_Mono8pt7bBitmaps,
  (GFXglyph *)Andale_Mono8pt7bGlyphs,
  0x20, 0x7E, 18 };

// Approx. 1431 bytes
