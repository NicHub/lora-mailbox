#pragma once
#include <Adafruit_GFX.h>

const uint8_t Andale_Mono10pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xF0, 0xF0, 0xCF, 0x3C, 0xF3, 0xCC, 0x08, 0x82, 0x21,
  0x10, 0x44, 0xFF, 0xC4, 0x41, 0x10, 0x88, 0x22, 0x3F, 0xF2, 0x20, 0x88,
  0x44, 0x11, 0x00, 0x08, 0x3C, 0x6A, 0xC8, 0xC8, 0xC8, 0x78, 0x3C, 0x0E,
  0x0B, 0x0B, 0x0B, 0x0B, 0xCE, 0x7C, 0x08, 0x70, 0x51, 0x12, 0x22, 0x44,
  0x88, 0xA0, 0xE4, 0x01, 0x00, 0x20, 0x09, 0xC1, 0x44, 0x48, 0x91, 0x12,
  0x22, 0x83, 0x80, 0x3C, 0x0C, 0xC1, 0x98, 0x33, 0x06, 0x40, 0x70, 0x06,
  0x0B, 0xC2, 0xCC, 0x98, 0xD3, 0x0C, 0x60, 0xC6, 0x38, 0x79, 0xC0, 0xFF,
  0xC0, 0x08, 0x8C, 0xC6, 0x63, 0x18, 0xC6, 0x31, 0x86, 0x30, 0xC2, 0x08,
  0x82, 0x18, 0x63, 0x0C, 0x63, 0x18, 0xC6, 0x33, 0x19, 0x88, 0x80, 0x11,
  0x25, 0x51, 0xC3, 0x8A, 0xA4, 0x88, 0x08, 0x04, 0x02, 0x01, 0x0F, 0xF8,
  0x40, 0x20, 0x10, 0x08, 0x00, 0xF6, 0xFC, 0xF0, 0x02, 0x04, 0x10, 0x20,
  0x81, 0x04, 0x08, 0x20, 0x41, 0x02, 0x08, 0x10, 0x00, 0x3E, 0x31, 0x98,
  0xD8, 0x3C, 0x1E, 0xEF, 0x77, 0xBB, 0xC1, 0xE0, 0xF0, 0x6C, 0x66, 0x31,
  0xF0, 0x38, 0xF8, 0x98, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xFF, 0x79, 0x18, 0x18, 0x30, 0x60, 0xC3, 0x06, 0x18, 0x60,
  0xC3, 0x0C, 0x1F, 0xC0, 0x7C, 0x86, 0x03, 0x03, 0x03, 0x06, 0x3C, 0x06,
  0x03, 0x03, 0x03, 0x03, 0x86, 0x78, 0x0F, 0x03, 0xC0, 0xF0, 0x6C, 0x1B,
  0x0C, 0xC3, 0x31, 0x8C, 0x63, 0x30, 0xCF, 0xFC, 0x0C, 0x03, 0x00, 0xC0,
  0x7E, 0x60, 0x60, 0x60, 0x60, 0x7C, 0x06, 0x03, 0x03, 0x03, 0x03, 0x02,
  0x86, 0x78, 0x1E, 0x18, 0x98, 0x0C, 0x0C, 0x06, 0x03, 0x79, 0xC6, 0xC1,
  0xE0, 0xF0, 0x6C, 0x36, 0x30, 0xF0, 0xFF, 0x03, 0x06, 0x06, 0x06, 0x0C,
  0x0C, 0x18, 0x18, 0x18, 0x30, 0x30, 0x30, 0x60, 0x3E, 0x31, 0xB0, 0x78,
  0x3C, 0x1B, 0x18, 0x70, 0xC6, 0xC1, 0xE0, 0xF0, 0x78, 0x36, 0x31, 0xF0,
  0x3C, 0x31, 0xB0, 0xD8, 0x3C, 0x1E, 0x0D, 0x8E, 0x7B, 0x01, 0x80, 0xC0,
  0xC0, 0x64, 0x61, 0xE0, 0xF0, 0x00, 0xF0, 0xF0, 0x00, 0xF6, 0x02, 0x08,
  0x63, 0x08, 0x0C, 0x06, 0x02, 0x02, 0xFF, 0x80, 0x00, 0x00, 0x0F, 0xF8,
  0x80, 0x80, 0xC0, 0x60, 0x21, 0x8C, 0x20, 0x80, 0x79, 0x18, 0x18, 0x30,
  0x61, 0x86, 0x18, 0x30, 0x60, 0x00, 0x03, 0x06, 0x00, 0x1E, 0x08, 0x44,
  0x09, 0x02, 0x8E, 0x64, 0x9A, 0x26, 0x89, 0xA4, 0x69, 0x2A, 0x4A, 0x7C,
  0x80, 0x10, 0x02, 0x10, 0x78, 0x0E, 0x01, 0xC0, 0x38, 0x0D, 0x81, 0xB0,
  0x36, 0x0C, 0x61, 0x8C, 0x3F, 0x8C, 0x19, 0x83, 0x30, 0x6C, 0x07, 0x80,
  0xC0, 0xFC, 0x63, 0x30, 0xD8, 0x6C, 0x36, 0x33, 0xF1, 0x86, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x37, 0xF0, 0x1F, 0x18, 0x58, 0x08, 0x0C, 0x06, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x0C, 0x03, 0x08, 0xF8, 0xF8, 0x63, 0x30,
  0xD8, 0x6C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0xD8, 0x6C, 0x67,
  0xC0, 0xFF, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x03, 0xFF, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x07, 0xFC, 0xFF, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x03,
  0xFD, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x1F, 0x18, 0x58,
  0x08, 0x0C, 0x06, 0x03, 0x01, 0x8F, 0xC1, 0xE0, 0xF0, 0x6C, 0x33, 0x18,
  0xF8, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0xFF, 0x83, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0C, 0xFC, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x33, 0xF0, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x38, 0xCF, 0x00, 0xC0, 0x70, 0x2C, 0x13, 0x08, 0xC4, 0x32,
  0x0D, 0x03, 0xE0, 0xCC, 0x31, 0x8C, 0x63, 0x0C, 0xC1, 0xB0, 0x30, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0x07, 0xFC, 0xE3, 0xF1, 0xF8, 0xFA, 0xBD, 0x5E, 0xAF, 0x27, 0x93,
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0C, 0xE1, 0xF0, 0xFC, 0x7E, 0x3D,
  0x1E, 0xCF, 0x67, 0x9B, 0xCD, 0xE2, 0xF1, 0xF8, 0xFC, 0x3E, 0x1C, 0x3E,
  0x31, 0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x6C,
  0x66, 0x31, 0xF0, 0xFE, 0x61, 0xB0, 0x78, 0x3C, 0x1E, 0x0F, 0x0D, 0xFC,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x3E, 0x31, 0x98, 0xD8, 0x3C,
  0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x6C, 0x66, 0x31, 0xF0, 0x18,
  0x07, 0xFE, 0x30, 0xCC, 0x1B, 0x06, 0xC1, 0xB0, 0x6C, 0x33, 0xF0, 0xCC,
  0x31, 0x8C, 0x33, 0x0C, 0xC1, 0xB0, 0x30, 0x3C, 0x62, 0xC0, 0xC0, 0xC0,
  0x70, 0x3C, 0x0E, 0x03, 0x03, 0x03, 0x03, 0x86, 0x7C, 0xFF, 0xC3, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83,
  0xC1, 0xE0, 0xF0, 0x78, 0x36, 0x31, 0xF0, 0xC0, 0x78, 0x0D, 0x83, 0x30,
  0x66, 0x0C, 0x63, 0x0C, 0x61, 0x8C, 0x1B, 0x03, 0x60, 0x6C, 0x07, 0x00,
  0xE0, 0x1C, 0x00, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x47, 0x88, 0x9A,
  0xB3, 0x56, 0x6A, 0xCE, 0x39, 0xC7, 0x38, 0xE2, 0x08, 0x41, 0x00, 0xC0,
  0x6C, 0x18, 0xC6, 0x18, 0xC1, 0xB0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x03,
  0x60, 0xC6, 0x18, 0xC6, 0x0D, 0x80, 0xC0, 0xC0, 0xD8, 0x66, 0x18, 0xCC,
  0x33, 0x07, 0x81, 0xE0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xFF, 0x80, 0xC0, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x18, 0x18,
  0x0C, 0x0C, 0x0C, 0x07, 0xFC, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
  0x8F, 0x81, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20,
  0x20, 0x40, 0xF1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x08, 0x0A,
  0x09, 0x04, 0x44, 0x12, 0x0A, 0x02, 0xFF, 0xF0, 0xC6, 0x30, 0x7E, 0x87,
  0x03, 0x03, 0x3F, 0x63, 0xC3, 0xC3, 0xC7, 0x7B, 0xC0, 0xC0, 0xC0, 0xC0,
  0xDC, 0xE6, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xE6, 0xDC, 0x1E, 0x61,
  0x60, 0xC0, 0xC0, 0xC0, 0xC0, 0x60, 0x61, 0x1E, 0x03, 0x03, 0x03, 0x03,
  0x3B, 0x67, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x67, 0x3B, 0x3C, 0x66,
  0xC3, 0xC3, 0xFF, 0xC0, 0xC0, 0x60, 0x61, 0x1E, 0x0F, 0x8C, 0x06, 0x03,
  0x0F, 0xF8, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0,
  0x7F, 0xE3, 0x31, 0x98, 0xC6, 0xC1, 0xC1, 0x01, 0x80, 0xFF, 0x3F, 0xD0,
  0x78, 0x3C, 0x33, 0xF0, 0xC0, 0xC0, 0xC0, 0xC0, 0xCE, 0xD3, 0xE3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x18, 0xC0, 0x0F, 0x8C, 0x63, 0x18,
  0xC6, 0x31, 0x8C, 0x0C, 0x30, 0x00, 0x7C, 0x30, 0xC3, 0x0C, 0x30, 0xC3,
  0x0C, 0x30, 0xC3, 0x8D, 0xE0, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x16, 0x13,
  0x11, 0x90, 0xD0, 0x7C, 0x33, 0x18, 0xCC, 0x36, 0x0C, 0xF8, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0xD9,
  0xBB, 0xBC, 0xCF, 0x33, 0xCC, 0xF3, 0x3C, 0xCF, 0x33, 0xCC, 0xF3, 0x30,
  0xCE, 0xD3, 0xE3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x3C, 0x66,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0xDC, 0xE6, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xE6, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0x3B, 0x67,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x67, 0x3B, 0x03, 0x03, 0x03, 0x03,
  0xCD, 0xA7, 0x86, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x80, 0x7C, 0xC2, 0xC0,
  0xE0, 0x7C, 0x1E, 0x03, 0x03, 0x87, 0x7C, 0x30, 0x30, 0x30, 0xFE, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x1E, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC7, 0xCB, 0x73, 0xC0, 0x6C, 0x19, 0x83, 0x18, 0xC3,
  0x18, 0x36, 0x06, 0xC0, 0x70, 0x0E, 0x00, 0x80, 0xC1, 0xE0, 0xF0, 0x79,
  0x3C, 0x9A, 0xA9, 0x54, 0xC6, 0x63, 0x20, 0x80, 0xC3, 0x66, 0x7E, 0x3C,
  0x18, 0x18, 0x3C, 0x7E, 0x66, 0xC3, 0xC0, 0x6C, 0x19, 0x83, 0x18, 0xC3,
  0x18, 0x66, 0x06, 0xC0, 0xD0, 0x0E, 0x01, 0x80, 0x30, 0x06, 0x01, 0x81,
  0xE0, 0x00, 0xFF, 0x06, 0x06, 0x0C, 0x18, 0x18, 0x30, 0x60, 0x60, 0xFF,
  0x19, 0x8C, 0x63, 0x18, 0xCC, 0x83, 0x0C, 0x63, 0x18, 0xC6, 0x18, 0xFF,
  0xFF, 0xC0, 0xC3, 0x18, 0xC6, 0x31, 0x86, 0x09, 0x98, 0xC6, 0x31, 0x8C,
  0xC0, 0x78, 0x10, 0xC4, 0x07, 0x00 };

const GFXglyph Andale_Mono10pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  12,    0,    0 },   // 0x20 ' '
  {     1,   2,  14,  12,    5,  -13 },   // 0x21 '!'
  {     5,   6,   5,  12,    3,  -13 },   // 0x22 '"'
  {     9,  10,  14,  12,    1,  -13 },   // 0x23 '#'
  {    27,   8,  16,  12,    2,  -14 },   // 0x24 '$'
  {    43,  11,  14,  12,    0,  -13 },   // 0x25 '%'
  {    63,  11,  14,  12,    1,  -13 },   // 0x26 '&'
  {    83,   2,   5,  12,    5,  -13 },   // 0x27 '''
  {    85,   5,  17,  12,    4,  -13 },   // 0x28 '('
  {    96,   5,  17,  12,    3,  -13 },   // 0x29 ')'
  {   107,   7,   8,  12,    2,  -13 },   // 0x2A '*'
  {   114,   9,   9,  12,    1,  -11 },   // 0x2B '+'
  {   125,   2,   4,  12,    5,   -1 },   // 0x2C ','
  {   126,   6,   1,  12,    3,   -5 },   // 0x2D '-'
  {   127,   2,   2,  12,    5,   -1 },   // 0x2E '.'
  {   128,   7,  14,  12,    2,  -13 },   // 0x2F '/'
  {   141,   9,  14,  12,    1,  -13 },   // 0x30 '0'
  {   157,   8,  14,  12,    2,  -13 },   // 0x31 '1'
  {   171,   7,  14,  12,    2,  -13 },   // 0x32 '2'
  {   184,   8,  14,  12,    2,  -13 },   // 0x33 '3'
  {   198,  10,  14,  12,    1,  -13 },   // 0x34 '4'
  {   216,   8,  14,  12,    2,  -13 },   // 0x35 '5'
  {   230,   9,  14,  12,    1,  -13 },   // 0x36 '6'
  {   246,   8,  14,  12,    2,  -13 },   // 0x37 '7'
  {   260,   9,  14,  12,    1,  -13 },   // 0x38 '8'
  {   276,   9,  14,  12,    1,  -13 },   // 0x39 '9'
  {   292,   2,  10,  12,    5,   -9 },   // 0x3A ':'
  {   295,   2,  12,  12,    5,   -9 },   // 0x3B ';'
  {   298,   7,   9,  12,    2,  -11 },   // 0x3C '<'
  {   306,   9,   5,  12,    1,   -9 },   // 0x3D '='
  {   312,   7,   9,  12,    3,  -11 },   // 0x3E '>'
  {   320,   7,  14,  12,    2,  -13 },   // 0x3F '?'
  {   333,  10,  16,  12,    1,  -13 },   // 0x40 '@'
  {   353,  11,  14,  12,    0,  -13 },   // 0x41 'A'
  {   373,   9,  14,  12,    1,  -13 },   // 0x42 'B'
  {   389,   9,  14,  12,    1,  -13 },   // 0x43 'C'
  {   405,   9,  14,  12,    1,  -13 },   // 0x44 'D'
  {   421,   9,  14,  12,    1,  -13 },   // 0x45 'E'
  {   437,   9,  14,  12,    1,  -13 },   // 0x46 'F'
  {   453,   9,  14,  12,    1,  -13 },   // 0x47 'G'
  {   469,   9,  14,  12,    1,  -13 },   // 0x48 'H'
  {   485,   6,  14,  12,    3,  -13 },   // 0x49 'I'
  {   496,   7,  14,  12,    1,  -13 },   // 0x4A 'J'
  {   509,  10,  14,  12,    1,  -13 },   // 0x4B 'K'
  {   527,   9,  14,  12,    1,  -13 },   // 0x4C 'L'
  {   543,   9,  14,  12,    1,  -13 },   // 0x4D 'M'
  {   559,   9,  14,  12,    1,  -13 },   // 0x4E 'N'
  {   575,   9,  14,  12,    1,  -13 },   // 0x4F 'O'
  {   591,   9,  14,  12,    1,  -13 },   // 0x50 'P'
  {   607,   9,  16,  12,    1,  -13 },   // 0x51 'Q'
  {   625,  10,  14,  12,    1,  -13 },   // 0x52 'R'
  {   643,   8,  14,  12,    2,  -13 },   // 0x53 'S'
  {   657,  10,  14,  12,    1,  -13 },   // 0x54 'T'
  {   675,   9,  14,  12,    1,  -13 },   // 0x55 'U'
  {   691,  11,  14,  12,    0,  -13 },   // 0x56 'V'
  {   711,  11,  14,  12,    0,  -13 },   // 0x57 'W'
  {   731,  11,  14,  12,    0,  -13 },   // 0x58 'X'
  {   751,  10,  14,  12,    1,  -13 },   // 0x59 'Y'
  {   769,   9,  14,  12,    1,  -13 },   // 0x5A 'Z'
  {   785,   4,  16,  12,    5,  -13 },   // 0x5B '['
  {   793,   7,  14,  12,    2,  -13 },   // 0x5C '\'
  {   806,   4,  16,  12,    3,  -13 },   // 0x5D ']'
  {   814,   9,   7,  12,    1,  -14 },   // 0x5E '^'
  {   822,  12,   1,  12,    0,    4 },   // 0x5F '_'
  {   824,   4,   3,  12,    3,  -13 },   // 0x60 '`'
  {   826,   8,  10,  12,    2,   -9 },   // 0x61 'a'
  {   836,   8,  14,  12,    2,  -13 },   // 0x62 'b'
  {   850,   8,  10,  12,    2,   -9 },   // 0x63 'c'
  {   860,   8,  14,  12,    2,  -13 },   // 0x64 'd'
  {   874,   8,  10,  12,    2,   -9 },   // 0x65 'e'
  {   884,   9,  14,  12,    2,  -13 },   // 0x66 'f'
  {   900,   9,  14,  12,    2,   -9 },   // 0x67 'g'
  {   916,   8,  14,  12,    2,  -13 },   // 0x68 'h'
  {   930,   5,  14,  12,    3,  -13 },   // 0x69 'i'
  {   939,   6,  18,  12,    2,  -13 },   // 0x6A 'j'
  {   953,   9,  14,  12,    2,  -13 },   // 0x6B 'k'
  {   969,   8,  14,  12,    2,  -13 },   // 0x6C 'l'
  {   983,  10,  10,  12,    1,   -9 },   // 0x6D 'm'
  {   996,   8,  10,  12,    2,   -9 },   // 0x6E 'n'
  {  1006,   8,  10,  12,    2,   -9 },   // 0x6F 'o'
  {  1016,   8,  14,  12,    2,   -9 },   // 0x70 'p'
  {  1030,   8,  14,  12,    2,   -9 },   // 0x71 'q'
  {  1044,   7,  10,  12,    3,   -9 },   // 0x72 'r'
  {  1053,   8,  10,  12,    2,   -9 },   // 0x73 's'
  {  1063,   8,  13,  12,    2,  -12 },   // 0x74 't'
  {  1076,   8,  10,  12,    2,   -9 },   // 0x75 'u'
  {  1086,  11,  10,  12,    0,   -9 },   // 0x76 'v'
  {  1100,   9,  10,  12,    2,   -9 },   // 0x77 'w'
  {  1112,   8,  10,  12,    2,   -9 },   // 0x78 'x'
  {  1122,  11,  14,  12,    0,   -9 },   // 0x79 'y'
  {  1142,   8,  10,  12,    2,   -9 },   // 0x7A 'z'
  {  1152,   5,  17,  12,    4,  -13 },   // 0x7B '{'
  {  1163,   1,  18,  12,    5,  -13 },   // 0x7C '|'
  {  1166,   5,  17,  12,    3,  -13 },   // 0x7D '}'
  {  1177,  11,   3,  12,    1,   -6 } }; // 0x7E '~'

const GFXfont Andale_Mono10pt7b PROGMEM = {
  (uint8_t  *)Andale_Mono10pt7bBitmaps,
  (GFXglyph *)Andale_Mono10pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 1854 bytes
